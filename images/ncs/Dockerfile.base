# syntax=docker/dockerfile:1
FROM --platform=${BUILDPLATFORM} alpine AS toolchain-downloader
ARG TARGETPLATFORM
ARG ZSDK_VERSION
ENV ZSDK_VERSION=$ZSDK_VERSION

RUN case ${TARGETPLATFORM} in \
         "linux/amd64")  NRFUTIL_ARCH=x86_64-unknown-linux-gnu; HOSTTYPE=x86_64  ;; \
         "linux/arm64")  NRFUTIL_ARCH=aarch64-unknown-linux-gnu; HOSTTYPE=aarch64  ;; \
         *) echo "Unsupported architecture: ${TARGETPLATFORM}" && exit 1 ;; \
    esac && \
    mkdir -p /opt/toolchains && \
    cd /opt/toolchains && \
    if [ "${HOSTTYPE}" = "x86_64" ]; then \
        wget https://files.nordicsemi.com/artifactory/swtools/external/nrfutil/executables/${NRFUTIL_ARCH}/nrfutil -O nrfutil && \
        chmod +x nrfutil; \
    else \
        touch nrfutil; \
    fi && \
    wget https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v${ZSDK_VERSION}/zephyr-sdk-${ZSDK_VERSION}_linux-${HOSTTYPE}_minimal.tar.xz && \
    tar xf zephyr-sdk-${ZSDK_VERSION}_linux-${HOSTTYPE}_minimal.tar.xz

FROM ubuntu-cpp AS base-ncs
ARG ZSDK_VERSION
COPY --from=toolchain-downloader --chmod=755 /opt/toolchains/nrfutil /usr/bin/nrfutil
COPY --from=toolchain-downloader /opt/toolchains/zephyr-sdk-${ZSDK_VERSION} /opt/toolchains/zephyr-sdk-${ZSDK_VERSION}
RUN apt-get update && export DEBIAN_FRONTEND=noninteractive \
    && apt-get -y install --no-install-recommends \
    bash-completion \
    gperf \
    ccache \
    dfu-util \
    device-tree-compiler \
    && apt-get autoremove -y && apt-get clean -y && rm -rf /var/lib/apt/lists/*